"use strict";(self.webpackChunkelfsquad=self.webpackChunkelfsquad||[]).push([[368],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1046:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),o=["components"],l={title:"Getting Started",sidebar_position:1},s="Get started using the SDK (C",c={unversionedId:"SDK-CSharp/getting-started",id:"SDK-CSharp/getting-started",isDocsHomePage:!1,title:"Getting Started",description:")",source:"@site/docs/SDK-CSharp/getting-started.md",sourceDirName:"SDK-CSharp",slug:"/SDK-CSharp/getting-started",permalink:"/docs/SDK-CSharp/getting-started",editUrl:"https://github.com/elfsquad/docs/edit/master/docs/SDK-CSharp/getting-started.md",version:"current",sidebarPosition:1,frontMatter:{title:"Getting Started",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Webhooks",permalink:"/docs/Webhooks"},next:{title:"Application Events",permalink:"/docs/SDK-CSharp/application-events"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Initializing the ElfskotApiClient",id:"initializing-the-elfskotapiclient",children:[]},{value:"Data management",id:"data-management",children:[{value:"Retrieving entities",id:"retrieving-entities",children:[]},{value:"Inserting entities",id:"inserting-entities",children:[]},{value:"Updating entities",id:"updating-entities",children:[]},{value:"Deleting entities",id:"deleting-entities",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-started-using-the-sdk-c"},"Get started using the SDK (C#)"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Our SDK is available as a ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Elfskot.Connect.SDK"},"NuGet package"),". Install the SDK using the NuGet package manager:\n",(0,r.kt)("inlineCode",{parentName:"p"},"Install-Package Elfskot.Connect.SDK")),(0,r.kt)("h2",{id:"initializing-the-elfskotapiclient"},"Initializing the ElfskotApiClient"),(0,r.kt)("p",null,"All interactions with the Elfskot API are done using the ",(0,r.kt)("em",{parentName:"p"},"ElfskotApiClient"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var elfskotApiClient = new ElfskotApiClient(new Guid("YOUR APPLICATION ID"),"YOUR SECRET");\n')),(0,r.kt)("h2",{id:"data-management"},"Data management"),(0,r.kt)("p",null,"Data management interactions are done through ManagementResources that can be directly accessed through ",(0,r.kt)("inlineCode",{parentName:"p"},"elfskotApiClient.Management"),"."),(0,r.kt)("h3",{id:"retrieving-entities"},"Retrieving entities"),(0,r.kt)("p",null,"To retrieve a entity by its ID you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"GetById"),"  method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var contact = elfskotApiClient\n    .Management\n    .CrmContacts\n    .GetById(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n')),(0,r.kt)("p",null,"To retrieve multiple entities you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Get")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"var contacts = elfskotApiClient\n    .Management\n    .CrmContacts\n    .OrderBy(c => c.CreatedDate)\n    .Limit(10)\n    .Get();\n")),(0,r.kt)("h4",{id:"including-referenced-entities"},"Including referenced entities"),(0,r.kt)("p",null,"By default the API will not include referenced entities. So for example if you want to retrieve the lines of quotation you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Include")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var quotation = elfskotApiClient\n    .Management\n    .Quotations\n    .Include(q => q.Lines) // <-- Reference the entity you want to include.\n    .GetById(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n\nforeach(var line in quotation.Lines)\n{\n}\n')),(0,r.kt)("h3",{id:"inserting-entities"},"Inserting entities"),(0,r.kt)("p",null,"To insert entities you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Create")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"BulkCreate")," methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'var newCrmAccount = new CrmAccount()\n    {\n        CompanyName = "Brightwater Industries"\n    };\n\nnewCrmAccount = elfskotApiClient\n    .Management\n    .CrmAccounts\n    .Create(newCrmAccount);\n\nvar newIdentifier = newCrmAccount.Id;\n')),(0,r.kt)("h3",{id:"updating-entities"},"Updating entities"),(0,r.kt)("p",null,"To update a entity you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Update")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"BulkUpdate")," methods:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"quotation.Deliverydate = DateTimeOffset.Now;\nelfskotApiClient\n    .Management\n    .Quotations\n    .Update(quotation);\n")),(0,r.kt)("h3",{id:"deleting-entities"},"Deleting entities"),(0,r.kt)("p",null,"To delete a entity you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Delete")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'elfskotApiClient\n    .Management\n    .CrmContacts\n    .Delete(new Guid("56448abb-f00e-45a8-b1ac-08c62c8ed8f5"));\n')))}d.isMDXComponent=!0}}]);