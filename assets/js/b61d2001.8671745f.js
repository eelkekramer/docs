"use strict";(self.webpackChunkelfsquad=self.webpackChunkelfsquad||[]).push([[541],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),c=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=r,f=s["".concat(u,".").concat(m)]||s[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9235:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return s}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],l={slug:"tutorial - custom configurator",title:"Tutorial - Custom configurator",author:"Johannes Heesterman",author_title:"Lead Software Engineer @ Elfsquad",author_url:"https://github.com/johannesheesterman",author_image_url:"https://avatars.githubusercontent.com/u/7443666?v=4",tags:["configurator"]},u=void 0,c={permalink:"/blog/tutorial - custom configurator",editUrl:"https://github.com/elfsquad/docs/edit/master/blog/2020-11-25-custom-configurator.md",source:"@site/blog/2020-11-25-custom-configurator.md",title:"Tutorial - Custom configurator",description:"Quick overview",date:"2020-11-25T00:00:00.000Z",formattedDate:"November 25, 2020",tags:[{label:"configurator",permalink:"/blog/tags/configurator"}],readingTime:2.375,truncated:!1,prevItem:{title:"Tutorial - Custom viewer based on Verge3D",permalink:"/blog/tutorial - verge3d viewer"},nextItem:{title:"Tutorial - Custom configurator in Angular",permalink:"/blog/tutorial - custom configurator in Angular"}},d=[{value:"Quick overview",id:"quick-overview",children:[]}],p={toc:d};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"quick-overview"},"Quick overview"),(0,o.kt)("p",null,"In this tutorial I will provide a quick overview of the endpoints that can be used to implement your own customer-facing configurator."),(0,o.kt)("h4",{id:"step-1-retrieve-a-list-of-configuration-models"},"Step 1. Retrieve a list of configuration models."),(0,o.kt)("p",null,"The first thing we want to do is provide the user with a selection of available configuration models. In order  to achieve this we can use the ",(0,o.kt)("a",{parentName:"p",href:"/apis/configurator"},"featuremodels endpoint"),":"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GET /api/2/featuremodels?include=RootFeature")),(0,o.kt)("p",null,"It is important we include the RootFeature property as it will contain information such as the name, price and image for a particular configuration model."),(0,o.kt)("h4",{id:"step-2-start-a-new-configuration"},"Step 2. Start a new configuration"),(0,o.kt)("p",null,"When a user has selected a configuration model to be configured, we can use the Id property to start a new configuration session. "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"GET /api/2/configurations/startnew/{featureModelId}")),(0,o.kt)("p",null,"Result (",(0,o.kt)("em",{parentName:"p"},"Some data has been emitted for clarity."),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "9c83b007-7e61-4b4c-9920-f125606844d5",\n  "currencyIso": "eur",\n  "currency": {\n    "iso": "eur",\n    "name": "Euro",\n    "symbol": "\\u20ac",\n    "decimalDigits": 2,\n    "rounding": 0,\n    "namePlural": "Euros",\n    "isDefault": false\n  },\n  "languageIso": "nl",\n  "countryIso": "nl",\n  "featureModelId": "b8230fc6-454c-4190-a33a-08d5640714ca",\n  "featureModel": ..., \n  "values": {\n    "7bcf2363-4300-4a6a-faa9-08d5640714d2": 1,\n    "580b4519-1a7a-46f9-fa7d-08d5640714d2": 4,\n    "8c81fabc-eaed-41e2-8ec2-08d5d10145ad": 4,\n    "e22f606d-3e4e-462e-8ec3-08d5d10145ad": 72,\n    ...\n  },\n  "conflicts": null,\n  "basePrice": 42750,\n  "basePriceLabel": "\\u20ac 42.750,00",\n  "basePriceIncVAT": 42750,\n  "basePriceIncVATLabel": "\\u20ac 42.750,00",\n  "basePriceExVAT": 42750,\n  "basePriceExVATLabel": "\\u20ac 42.750,00",\n  "additionalPrice": 10730,\n  "additionalPriceLabel": "\\u20ac 10.730,00",\n  "additionalPriceIncVAT": 10730,\n  "additionalPriceIncVATLabel": "\\u20ac 10.730,00",\n  "additionalPriceExVAT": 10730,\n  "additionalPriceExVATLabel": "\\u20ac 10.730,00",\n  "totalPrice": 53480,\n  "totalPriceLabel": "\\u20ac 53.480,00",\n  "totalPriceExVAT": 53480,\n  "totalPriceExVATLabel": "\\u20ac 53.480,00",\n  "totalPriceIncVAT": 53480,\n  "totalPriceIncVATLabel": "\\u20ac 53.480,00",\n  "leasePrices": null,\n  "leasePricesLabels": null\n}\n')),(0,o.kt)("p",null,"Overview of important configuration properties:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Id"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Guid")),(0,o.kt)("td",{parentName:"tr",align:null},"Identifier of the configuration session. This id is used for updating configuration values and requesting a quotation.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"FeatureModel"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"object")),(0,o.kt)("td",{parentName:"tr",align:null},"Object that represents the entire configuration model. This object should be used to build the configurator UI.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Values"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"object")),(0,o.kt)("td",{parentName:"tr",align:null},"Object that contains all values of the configuration. The key represents the identifier of a feature model node. The value represents the selected value for that particular node.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Conflicts"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"object")),(0,o.kt)("td",{parentName:"tr",align:null},"If a conflict occurs during the configuration process this object will be filled with conflicting nodes and solution options.")))),(0,o.kt)("h4",{id:"step-3-update-value"},"Step 3. Update value"),(0,o.kt)("p",null,"In order to update a value for a particular option we use the update endpoint:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PUT /api/2/configurations/{configurationId}?ignoreConflicts=true&compress=true")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"The ignoreConflicts parameter is optional. When this parameter is set to true the configurator will automatically resolve any conflicts that might occur."),"\n",(0,o.kt)("em",{parentName:"p"},"The compress parameter is also optional, but recommended. It will ensure only values will be returned that actually changed.")),(0,o.kt)("p",null,"Request body:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'{featureModelNodeId: "949af91c-8a0b-4540-fa87-08d5640714d2", value: 1}')),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"featureModelNodeId"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Guid")),(0,o.kt)("td",{parentName:"tr",align:null},"Identifier of the feature model node.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"value"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"number")),(0,o.kt)("td",{parentName:"tr",align:null},"User-selected value for the option. 0 for false, 1 for true, or any other number when the option is provided as an input field.")))))}s.isMDXComponent=!0}}]);